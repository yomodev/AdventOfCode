using AoC2021Lib;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Linq;

namespace TestAoC2021
{
    [TestClass]
    public class TestDay07
    {
        [TestMethod]
        [DataRow("16,1,2,0,4,2,7,1,2,14", 37)]
        [DataRow("1101,1,29,67,1102,0,1,65,1008,65,35,66,1005,66,28,1,67,65,20,4,0,1001,65,1,65,1106,0,8,99,35,67,101,99,105,32,110,39,101,115,116,32,112,97,115,32,117,110,101,32,105,110,116,99,111,100,101,32,112,114,111,103,114,97,109,10,52,1088,462,1398,576,241,636,512,28,390,168,262,6,489,1152,466,539,133,159,1481,128,198,858,57,12,1155,400,137,557,1370,440,885,1433,360,387,5,173,397,465,426,365,470,456,45,1052,1116,26,17,585,647,357,786,313,1124,346,694,941,124,825,243,852,76,618,436,596,14,958,969,895,1745,246,822,239,952,928,206,406,190,459,841,25,1087,299,962,15,1539,1003,456,51,546,858,137,1214,110,936,975,1164,51,82,947,1354,312,132,261,181,287,107,1411,332,930,60,1458,22,248,175,3,946,1097,35,231,648,109,313,1061,163,1382,80,912,89,718,1068,419,703,155,321,909,9,212,478,315,118,206,38,125,130,1391,229,8,44,571,432,24,283,0,941,422,251,686,578,154,123,489,86,1217,129,227,638,47,187,946,2,536,227,640,1170,1444,286,1280,83,1253,1735,70,52,104,658,367,302,462,394,13,798,514,104,260,479,526,632,1161,1118,320,196,262,571,1319,594,131,797,37,566,1054,271,159,1021,244,204,447,624,825,723,364,234,105,362,305,391,681,692,89,380,104,1217,814,1467,898,207,1345,94,10,1380,50,1192,178,1539,1712,145,390,9,878,144,1241,395,10,41,80,1719,1077,113,46,1699,130,91,723,359,1617,1065,530,1058,903,163,412,45,858,10,1704,141,451,1314,879,13,857,905,87,830,1228,25,1594,153,4,585,46,862,265,833,301,473,458,85,254,22,266,543,32,939,1113,228,544,205,1617,1109,445,86,5,278,16,784,303,1022,1014,162,714,447,656,834,138,448,30,85,371,951,1256,842,5,460,919,1019,785,1275,616,1593,168,1727,311,950,1299,1131,796,522,443,703,836,47,300,449,11,360,682,487,108,1396,623,1108,239,379,0,822,109,60,98,667,242,1398,650,25,376,168,46,259,138,254,1631,953,776,166,0,628,75,413,1401,69,462,883,877,96,314,825,346,932,352,1086,143,507,134,557,31,1663,565,275,207,330,702,53,1085,259,14,26,851,1571,1829,1513,356,70,1393,426,345,412,129,908,959,896,1578,617,428,222,1256,3,863,237,5,357,92,292,514,4,919,5,848,1605,149,959,376,1709,410,460,646,389,13,1388,294,1151,652,10,113,769,1519,57,685,1132,1,417,1369,1396,248,496,145,64,798,719,716,845,168,1,147,347,239,512,19,478,336,20,327,487,141,37,96,331,826,1347,479,182,601,233,564,196,0,811,19,318,86,1442,468,396,298,46,661,339,914,54,560,91,284,829,1710,478,318,780,738,807,1017,166,48,358,193,466,831,138,226,5,24,251,119,644,545,588,170,890,248,596,310,612,479,366,1374,465,32,467,79,603,220,1138,168,968,420,129,90,214,652,408,169,0,173,19,312,65,38,115,325,158,1458,744,1529,361,360,77,75,130,111,175,34,676,169,384,473,296,701,84,11,1862,223,193,118,678,403,1097,2,1318,190,590,96,47,69,212,520,786,1569,703,1776,140,12,741,906,29,115,30,196,821,23,51,540,225,891,133,907,567,143,44,371,1038,237,0,222,1327,760,854,1,29,14,65,98,25,233,423,63,382,648,257,160,71,1287,315,627,40,159,202,112,657,87,94,93,362,23,501,870,1114,946,1007,453,159,493,590,665,28,435,7,1238,1846,758,174,258,972,557,1431,482,429,57,389,651,1089,1490,821,844,458,712,259,433,418,344,466,60,123,1604,897,1346,198,143,259,49,770,1703,900,1364,450,498,30,543,322,3,533,508,444,148,927,72,321,733,689,24,44,685,1021,324,182,1737,975,387,143,176,478,602,752,203,130,169,165,41,119,35,175,763,1147,5,137,10,357,54,1209,182,298,156,1488,176,86,548,2,37,36,76,100,1369,1174,322,32,573,107,375,1210,51,597,902,878,919,379,125,26,1240,7,7,131,913,994,1097,576,112,694,805,551,512,663,361,747,161,691,63,119,47,89,6,258,57,537,654,757,1202,922,475,347,193,79,1177,443,33,1257,1070,118,810,117,37,226,230,552,618,341,530,681,1015,358,846,276,1149,210,525,1144,272,30,551,55,512,229,90,1144,389,500,372,92,58,598,1362,475,70,748,1217,442,28,334,369,768,169,405,1058,759,1087,268,714,81,594,1423,1004,694,61,1032,895,1321,95,1512,646,818,845,1275,294,883,1684,1062,2,851,304,306,128,1523,1594,190,73,809,175,321,407,424,109,48,234,437,968,284,1069,181,340,149,9,163,863,17,584,421,79,164,913,81", 356922)]
        [DataRow("1101,1,29,67,1102,0,1,65,1008,65,35,66,1005,66,28,1,67,65,20,4,0,1001,65,1,65,1106,0,8,99,35,67,101,99,105,32,110,39,101,115,116,32,112,97,115,32,117,110,101,32,105,110,116,99,111,100,101,32,112,114,111,103,114,97,109,10,121,295,1276,124,523,395,987,355,1668,754,139,217,433,1,836,467,1384,66,390,1278,113,114,355,434,396,1050,1552,612,793,532,26,1340,150,455,83,320,587,701,429,596,154,4,1247,55,1376,507,205,1760,774,980,485,10,161,524,213,156,36,56,550,429,337,76,53,276,475,1220,1539,10,53,87,32,1280,757,447,948,983,504,998,1220,27,6,1410,118,172,467,53,351,813,304,708,455,1227,1081,161,1077,36,196,289,371,1354,278,367,992,1,1002,428,535,124,341,318,455,783,916,139,559,71,86,248,71,26,237,99,1064,387,305,454,21,85,202,1156,1410,46,125,217,651,341,15,858,39,248,1677,1792,7,866,781,479,277,1331,92,297,573,112,778,772,388,384,34,335,755,442,1157,537,44,1050,1302,375,136,1017,824,188,362,1359,541,598,43,14,66,1168,43,129,85,71,176,182,1252,336,451,1083,408,761,1327,129,1055,136,770,1489,463,66,685,864,857,150,40,72,807,1017,253,38,659,843,1125,660,891,674,635,113,474,1087,545,196,231,200,865,446,269,739,66,1074,590,5,60,717,170,109,133,243,16,97,393,454,49,597,1355,58,1665,1432,41,251,648,742,87,1172,19,1445,243,728,246,764,206,773,620,866,500,127,91,773,521,47,53,150,828,408,1096,178,567,1356,132,792,6,392,205,894,362,5,554,1287,706,46,800,8,114,152,669,367,640,776,1274,321,1853,308,545,597,28,999,352,29,810,86,106,602,106,121,1467,252,1450,322,267,779,722,57,0,367,39,28,119,99,655,30,723,254,175,921,158,27,879,864,979,436,188,247,96,1109,1033,768,53,175,228,621,134,398,349,270,666,603,818,88,858,310,283,370,517,636,689,114,186,156,306,1044,296,251,1102,1921,34,804,314,298,262,1240,86,227,385,145,54,43,229,15,1034,200,408,1408,13,725,180,597,168,152,961,200,560,288,479,90,157,135,1051,412,1073,132,635,117,597,1448,445,95,278,327,179,1029,18,257,1406,159,1368,359,23,427,225,120,1763,1230,733,110,40,195,870,509,407,881,826,209,106,130,1227,848,336,430,1490,326,377,461,197,70,574,841,497,141,15,83,347,312,555,756,61,1041,171,723,395,632,9,699,365,353,122,620,144,229,12,361,726,0,254,275,28,197,76,387,510,65,771,192,11,345,1317,37,415,286,1,610,378,82,131,94,65,444,455,1146,1319,8,167,79,575,190,351,53,251,352,366,1085,1122,519,5,230,685,388,1476,516,107,365,380,642,1316,400,72,168,178,112,850,264,143,29,605,149,4,216,1327,667,783,40,64,446,580,1280,47,1,322,592,6,560,648,49,116,418,236,620,166,1198,801,362,278,230,417,162,55,535,245,360,73,13,459,505,124,125,325,1126,132,193,374,320,569,842,74,902,210,1199,346,593,912,110,20,482,201,564,248,6,653,208,401,126,248,300,817,581,11,27,924,400,1118,55,1445,6,1024,770,707,510,166,0,435,1188,43,278,338,84,829,1603,55,1255,155,592,420,513,928,1163,51,342,15,499,357,431,1701,54,1521,214,831,199,43,433,1326,1120,803,1154,72,40,181,124,424,464,825,446,500,149,559,355,495,997,87,322,335,701,64,13,978,373,157,1376,1640,255,727,902,86,1230,1517,98,860,797,210,178,1195,493,1007,305,1219,1255,1078,460,712,118,1252,1029,1423,116,41,907,304,651,414,881,162,151,464,265,430,217,1353,315,122,1020,540,8,591,3,50,401,324,1212,143,869,608,706,128,202,25,1118,780,267,305,685,60,92,980,868,1458,446,635,374,565,741,474,367,723,119,70,683,471,651,155,23,158,91,287,8,516,560,434,236,572,320,16,100,140,171,380,672,699,731,621,1346,531,376,182,484,2,198,489,382,388,1200,58,4,885,1575,1320,540,32,1293,217,281,18,212,1240,634,29,153,258,472,501,743,109,55,577,1518,173,308,369,1365,587,260,98,1038,6,1187,278,582,115,1539,282,224,40,306,1447,942,1732,131,320,243,14,559,991,308,7,111,1072,566,42,103,69,1857,1556,229,300,540,183,243,1312,546,19,1287,1597,421,391,169,520,267,591,195,1076,590,917,1018,556,410,498,488,352,590,814,23,299,1254,123,1228,722,745,96,644,288,252,253,1010,26,255,568,783,147,57,63,696,619,1362,1575,1525,696,80,746,294,447,183,320,176,544,278,1757,204,362,13,412,173,438,285,468,3,47,1020,347,640,1442", 336131)]
        public void Test1(string data, int expected)
        {
            var input = data.Split(',').Select(int.Parse).ToList();
            var result = new Day07().Part1(input);
            Assert.AreEqual(expected, result);
        }

        [TestMethod]
        [DataRow("16,1,2,0,4,2,7,1,2,14", 168)]
        [DataRow("1101,1,29,67,1102,0,1,65,1008,65,35,66,1005,66,28,1,67,65,20,4,0,1001,65,1,65,1106,0,8,99,35,67,101,99,105,32,110,39,101,115,116,32,112,97,115,32,117,110,101,32,105,110,116,99,111,100,101,32,112,114,111,103,114,97,109,10,52,1088,462,1398,576,241,636,512,28,390,168,262,6,489,1152,466,539,133,159,1481,128,198,858,57,12,1155,400,137,557,1370,440,885,1433,360,387,5,173,397,465,426,365,470,456,45,1052,1116,26,17,585,647,357,786,313,1124,346,694,941,124,825,243,852,76,618,436,596,14,958,969,895,1745,246,822,239,952,928,206,406,190,459,841,25,1087,299,962,15,1539,1003,456,51,546,858,137,1214,110,936,975,1164,51,82,947,1354,312,132,261,181,287,107,1411,332,930,60,1458,22,248,175,3,946,1097,35,231,648,109,313,1061,163,1382,80,912,89,718,1068,419,703,155,321,909,9,212,478,315,118,206,38,125,130,1391,229,8,44,571,432,24,283,0,941,422,251,686,578,154,123,489,86,1217,129,227,638,47,187,946,2,536,227,640,1170,1444,286,1280,83,1253,1735,70,52,104,658,367,302,462,394,13,798,514,104,260,479,526,632,1161,1118,320,196,262,571,1319,594,131,797,37,566,1054,271,159,1021,244,204,447,624,825,723,364,234,105,362,305,391,681,692,89,380,104,1217,814,1467,898,207,1345,94,10,1380,50,1192,178,1539,1712,145,390,9,878,144,1241,395,10,41,80,1719,1077,113,46,1699,130,91,723,359,1617,1065,530,1058,903,163,412,45,858,10,1704,141,451,1314,879,13,857,905,87,830,1228,25,1594,153,4,585,46,862,265,833,301,473,458,85,254,22,266,543,32,939,1113,228,544,205,1617,1109,445,86,5,278,16,784,303,1022,1014,162,714,447,656,834,138,448,30,85,371,951,1256,842,5,460,919,1019,785,1275,616,1593,168,1727,311,950,1299,1131,796,522,443,703,836,47,300,449,11,360,682,487,108,1396,623,1108,239,379,0,822,109,60,98,667,242,1398,650,25,376,168,46,259,138,254,1631,953,776,166,0,628,75,413,1401,69,462,883,877,96,314,825,346,932,352,1086,143,507,134,557,31,1663,565,275,207,330,702,53,1085,259,14,26,851,1571,1829,1513,356,70,1393,426,345,412,129,908,959,896,1578,617,428,222,1256,3,863,237,5,357,92,292,514,4,919,5,848,1605,149,959,376,1709,410,460,646,389,13,1388,294,1151,652,10,113,769,1519,57,685,1132,1,417,1369,1396,248,496,145,64,798,719,716,845,168,1,147,347,239,512,19,478,336,20,327,487,141,37,96,331,826,1347,479,182,601,233,564,196,0,811,19,318,86,1442,468,396,298,46,661,339,914,54,560,91,284,829,1710,478,318,780,738,807,1017,166,48,358,193,466,831,138,226,5,24,251,119,644,545,588,170,890,248,596,310,612,479,366,1374,465,32,467,79,603,220,1138,168,968,420,129,90,214,652,408,169,0,173,19,312,65,38,115,325,158,1458,744,1529,361,360,77,75,130,111,175,34,676,169,384,473,296,701,84,11,1862,223,193,118,678,403,1097,2,1318,190,590,96,47,69,212,520,786,1569,703,1776,140,12,741,906,29,115,30,196,821,23,51,540,225,891,133,907,567,143,44,371,1038,237,0,222,1327,760,854,1,29,14,65,98,25,233,423,63,382,648,257,160,71,1287,315,627,40,159,202,112,657,87,94,93,362,23,501,870,1114,946,1007,453,159,493,590,665,28,435,7,1238,1846,758,174,258,972,557,1431,482,429,57,389,651,1089,1490,821,844,458,712,259,433,418,344,466,60,123,1604,897,1346,198,143,259,49,770,1703,900,1364,450,498,30,543,322,3,533,508,444,148,927,72,321,733,689,24,44,685,1021,324,182,1737,975,387,143,176,478,602,752,203,130,169,165,41,119,35,175,763,1147,5,137,10,357,54,1209,182,298,156,1488,176,86,548,2,37,36,76,100,1369,1174,322,32,573,107,375,1210,51,597,902,878,919,379,125,26,1240,7,7,131,913,994,1097,576,112,694,805,551,512,663,361,747,161,691,63,119,47,89,6,258,57,537,654,757,1202,922,475,347,193,79,1177,443,33,1257,1070,118,810,117,37,226,230,552,618,341,530,681,1015,358,846,276,1149,210,525,1144,272,30,551,55,512,229,90,1144,389,500,372,92,58,598,1362,475,70,748,1217,442,28,334,369,768,169,405,1058,759,1087,268,714,81,594,1423,1004,694,61,1032,895,1321,95,1512,646,818,845,1275,294,883,1684,1062,2,851,304,306,128,1523,1594,190,73,809,175,321,407,424,109,48,234,437,968,284,1069,181,340,149,9,163,863,17,584,421,79,164,913,81", 100347031)]
        [DataRow("1101,1,29,67,1102,0,1,65,1008,65,35,66,1005,66,28,1,67,65,20,4,0,1001,65,1,65,1106,0,8,99,35,67,101,99,105,32,110,39,101,115,116,32,112,97,115,32,117,110,101,32,105,110,116,99,111,100,101,32,112,114,111,103,114,97,109,10,121,295,1276,124,523,395,987,355,1668,754,139,217,433,1,836,467,1384,66,390,1278,113,114,355,434,396,1050,1552,612,793,532,26,1340,150,455,83,320,587,701,429,596,154,4,1247,55,1376,507,205,1760,774,980,485,10,161,524,213,156,36,56,550,429,337,76,53,276,475,1220,1539,10,53,87,32,1280,757,447,948,983,504,998,1220,27,6,1410,118,172,467,53,351,813,304,708,455,1227,1081,161,1077,36,196,289,371,1354,278,367,992,1,1002,428,535,124,341,318,455,783,916,139,559,71,86,248,71,26,237,99,1064,387,305,454,21,85,202,1156,1410,46,125,217,651,341,15,858,39,248,1677,1792,7,866,781,479,277,1331,92,297,573,112,778,772,388,384,34,335,755,442,1157,537,44,1050,1302,375,136,1017,824,188,362,1359,541,598,43,14,66,1168,43,129,85,71,176,182,1252,336,451,1083,408,761,1327,129,1055,136,770,1489,463,66,685,864,857,150,40,72,807,1017,253,38,659,843,1125,660,891,674,635,113,474,1087,545,196,231,200,865,446,269,739,66,1074,590,5,60,717,170,109,133,243,16,97,393,454,49,597,1355,58,1665,1432,41,251,648,742,87,1172,19,1445,243,728,246,764,206,773,620,866,500,127,91,773,521,47,53,150,828,408,1096,178,567,1356,132,792,6,392,205,894,362,5,554,1287,706,46,800,8,114,152,669,367,640,776,1274,321,1853,308,545,597,28,999,352,29,810,86,106,602,106,121,1467,252,1450,322,267,779,722,57,0,367,39,28,119,99,655,30,723,254,175,921,158,27,879,864,979,436,188,247,96,1109,1033,768,53,175,228,621,134,398,349,270,666,603,818,88,858,310,283,370,517,636,689,114,186,156,306,1044,296,251,1102,1921,34,804,314,298,262,1240,86,227,385,145,54,43,229,15,1034,200,408,1408,13,725,180,597,168,152,961,200,560,288,479,90,157,135,1051,412,1073,132,635,117,597,1448,445,95,278,327,179,1029,18,257,1406,159,1368,359,23,427,225,120,1763,1230,733,110,40,195,870,509,407,881,826,209,106,130,1227,848,336,430,1490,326,377,461,197,70,574,841,497,141,15,83,347,312,555,756,61,1041,171,723,395,632,9,699,365,353,122,620,144,229,12,361,726,0,254,275,28,197,76,387,510,65,771,192,11,345,1317,37,415,286,1,610,378,82,131,94,65,444,455,1146,1319,8,167,79,575,190,351,53,251,352,366,1085,1122,519,5,230,685,388,1476,516,107,365,380,642,1316,400,72,168,178,112,850,264,143,29,605,149,4,216,1327,667,783,40,64,446,580,1280,47,1,322,592,6,560,648,49,116,418,236,620,166,1198,801,362,278,230,417,162,55,535,245,360,73,13,459,505,124,125,325,1126,132,193,374,320,569,842,74,902,210,1199,346,593,912,110,20,482,201,564,248,6,653,208,401,126,248,300,817,581,11,27,924,400,1118,55,1445,6,1024,770,707,510,166,0,435,1188,43,278,338,84,829,1603,55,1255,155,592,420,513,928,1163,51,342,15,499,357,431,1701,54,1521,214,831,199,43,433,1326,1120,803,1154,72,40,181,124,424,464,825,446,500,149,559,355,495,997,87,322,335,701,64,13,978,373,157,1376,1640,255,727,902,86,1230,1517,98,860,797,210,178,1195,493,1007,305,1219,1255,1078,460,712,118,1252,1029,1423,116,41,907,304,651,414,881,162,151,464,265,430,217,1353,315,122,1020,540,8,591,3,50,401,324,1212,143,869,608,706,128,202,25,1118,780,267,305,685,60,92,980,868,1458,446,635,374,565,741,474,367,723,119,70,683,471,651,155,23,158,91,287,8,516,560,434,236,572,320,16,100,140,171,380,672,699,731,621,1346,531,376,182,484,2,198,489,382,388,1200,58,4,885,1575,1320,540,32,1293,217,281,18,212,1240,634,29,153,258,472,501,743,109,55,577,1518,173,308,369,1365,587,260,98,1038,6,1187,278,582,115,1539,282,224,40,306,1447,942,1732,131,320,243,14,559,991,308,7,111,1072,566,42,103,69,1857,1556,229,300,540,183,243,1312,546,19,1287,1597,421,391,169,520,267,591,195,1076,590,917,1018,556,410,498,488,352,590,814,23,299,1254,123,1228,722,745,96,644,288,252,253,1010,26,255,568,783,147,57,63,696,619,1362,1575,1525,696,80,746,294,447,183,320,176,544,278,1757,204,362,13,412,173,438,285,468,3,47,1020,347,640,1442", 92676646)]
        public void Test2(string data, long expected)
        {
            var input = data.Split(',').Select(int.Parse).ToList();
            var result = new Day07().Part2(input);
            Assert.AreEqual(expected, result);
        }
    }
}
